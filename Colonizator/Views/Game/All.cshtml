@model List<GameLogic.Game.Game>
@{
    ViewBag.Title = "Игра";
}

<script src="~/Scripts/jquery.signalR-2.0.1.min.js"></script>
<script src="~/signalr/hubs"></script>
<script src="~/Scripts/game.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="~/Scripts/Dice.js"></script>
<script src="~/Scripts/Serializer.js"></script>
<link href="~/Content/Market.css" rel="stylesheet" />
<script>
    var gameHub;
    var mapHub;
    var markethub;
    var userId = -1;
    var userMove;
    var userName;
    var isInQueue = false;
    var token;
    var global_data;
    var currentUser;
    $(function () {
        mapHub = $.connection.mapHub;

        mapHub.client.updateState = function (data) {
            console.log("update state", data);
            userMove = data.movePlayer;
            switch (data.Args.Action) {
                case 0://"NextMove":
                    console.log("updateState switch (data.Args.Action) NextMove", data);
                    GetCitiesAdnRoads();
                    GetPartials();
                    if (!data.isStartUp) {
                        NeedThrowDice();
                    }
                    PassMoveAvaible();
                    break;
                case 1:// "DiceThrowen":
                    console.log("updateState switch (data.Args.Action) DiceThrowen", data);
                    throwenDice(data);
                    break;
                case 2://"MoveRobber":
                    moveRobber(data);
                    console.log("updateState switch (data.Args.Action) MoveRobber", data);
                    break;
                case 3://"Monopoly":
                    console.log("updateState switch (data.Args.Action) Monopoly", data);
                    break;
                case 4://"FreeResource":
                    chooseFreeResouce(data);
                    console.log("updateState switch (data.Args.Action) FreeResource", data);
                    break;
                case 5:// "CardUpdate":
                    console.log("updateState switch (data.Args.Action) CardUpdate", data);
                    GetPartials();
                    break;
                case 6://"RegularUpdate":
                    console.log("updateState switch (data.Args.Action) RegularUpdate", data);
                    GetCitiesAdnRoads();
                    GetPartials();
                    PassMoveAvaible();
                    break;
                default:
                    console.log("updateState switch (data.Args.Action) default", data);
                    break;
            }
        };

        mapHub.client.throwenDice = throwenDice;

        mapHub.client.updateQueue = function (eventArgs) {
            console.log("update queue");
            if (!isInQueue) {
                userId = eventArgs.playerCount - 1;
                isInQueue = true;
                currentUser = eventArgs.player;
            }
            $('#userQueue').html("Начат поиск игры вы " + (userId + 1) + "-й в очереди");
        };

        mapHub.client.gameStart = function (eventArgs) {
            console.log("start game");
            $('#preGameState').hide();

            if (!isInQueue) {
                userId = eventArgs.playerCount - 1;
                currentUser = eventArgs.player;
                isInQueue = true;
            }
            token = eventArgs.token;
            $('#UserName').html(userName);
            $('#UserColor').html(userId);
            $('#tokenGame').html(token);

            $.getJSON('/Game/Map?token=' + token, function (data) {
                DrawField(data);

                $.getJSON('/Game/MapState?token=' + token, function (data1) {
                    DrawTowns(data1.Cities);
                    DrawRoads(data1.Roads);
                    $.getJSON('/Game/AvailableMap?playerId=' + userId + '&token=' + token, function (data2) {
                        global_data = data2;
                        console.log('/Game/AvailableMap?playerId=' + userId + '&token=' + token);
                        DrawTowns(data2.Cities, true);
                        DrawRoads(data2.Roads, true);
                    });
                });
            });
            GetPartials();
        };

        $('#displayname').focus();
        // Start the connection.
        $.connection.hub.start().done(function () {
            $('#search').click(function () {
                userName = $('#displayname').val();
                mapHub.server.searchGame($('#displayname').val());
                $('#creatingGame').hide();
                $('#userQueue').html("Начат поиск игры");
            });
        });
        $('#throwDiceBtn').click(function () {
            $.get('/Game/ThrowDice?playerId=' + userId + '&token=' + token, function (data) {
                console.log('/Game/ThrowDice?playerId=' + userId + '&token=' + token);
                $('#throwDiceResult').html(data);
                $('#throwDiceCloseBtn').show();
            });
        });
        $('#passMove').hide();
        $('#passMove').click(PassMove);
    });
    // This optional function html-encodes messages for display in the page.
    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }

    function toQueue() {
    }

    function NeedThrowDice() {
        console.log('NeedThrowDice');
        if (currentUser.PlayerName == userMove) {
            $('#throwDiceResult').html('Ваш ход, бросьте кубики');
            $('#throwDiceModal').modal('show');
            $('#throwDiceCloseBtn').hide();
            $('#throwDiceBtn').show();
        } else {
            $('#throwDiceResult').html('Ход ' + userMove + ' , ждите пока он бросит кубики')
            $('#throwDiceModal').modal('show');
            $('#throwDiceCloseBtn').hide();
            $('#throwDiceBtn').hide();
        }
        togleCube(0, 1);
        togleCube(1, 1);
    }

    function PassMoveAvaible() {
        console.log('PassMoveAvaible');
        if (currentUser.PlayerName == userMove) {
            $('#passMove').show();
        } else {
            $('#passMove').hide();
        }
    }

    function PassMove() {
        console.log('PassMove');
        if (currentUser.PlayerName == userMove) {
            $('#passMove').show();
            $.post(
                    "/Game/PassMove",
                    {
                        token: token,
                        playerId: userId
                    });
        }
    }

    function throwenDice(data) {
        console.log('throwenDice', data);
        if (currentUser.PlayerName == userMove) {
            $('#throwDiceResult').html('Вам выпало ' + data.Args.First + ' и ' + data.Args.Second);
        } else {
            $('#throwDiceResult').html(userMove + ' выпало ' + data.Args.First + ' и ' + data.Args.Second);
        }
        $('#throwDiceCloseBtn').show();
        $('#throwDiceBtn').hide();
        togleCube(0, data.First);
        togleCube(1, data.Second);
        GetPartials();
    }

    function GetPartials() {
        $.get('/Game/GameStatePartial?playerId=' + userId + '&token=' + token, function (data) {
            console.log('/Game/GameStatePartial?playerId=' + userId + '&token=' + token);
            $('#gameState').html(data);
        });
        $.get('/Game/MarketPartial?playerId=' + userId + '&token=' + token, function (data) {
            console.log('/Game/MarketPartial?playerId=' + userId + '&token=' + token);
            $('#gameMarket').html(data);
        });
        $.get('/Game/DeckPartial?playerId=' + userId + '&token=' + token, function (data) {
            console.log('/Game/DeckPartial?playerId=' + userId + '&token=' + token);
            $('#deckPartial').html(data);
        });
    }

    var moveRobber = function (args) {
        if (currentUser.PlayerName == userMove) {
            tileClick = function (parameters) {
                console.log("MoveRobber", parameters, args);
                var contract = { token: token, playerId: userId, hexagonIngex: parameters.HexagonIndex };
                $.post("/Game/MoveRobber", $.toDictionary(contract));
                console.log("/Game/MoveRobber", contract);
            };
        }
    };

    function resumeGame(token) {
        mapHub.server.resumeGame(token);
    };

    var chosenResourcs;
    var neededResourceCount = 7;
    var neededResourceQty = -1;
    var chooseMonopolyResource = function(args) {
        chosenResourcs = [
            { Type: 0, Qty: 0 },
            { Type: 1, Qty: 0 },
            { Type: 2, Qty: 0 },
            { Type: 3, Qty: 0 },
            { Type: 4, Qty: 0 }
        ];
        neededResourceCount = 1;
        neededResourceQty = 1;
        if (currentUser.PlayerName == userMove) {
            $('#freeResourceChoose').modal('show');
            $('#resourceCheckLabe').html('Играя эту карточку, игрок выбирает один тип ресурса. Остальные игроки должны отдать ему все карточки ресурсов этого типа');
            $('#freeResourceChooseSendBtn').hide();
            $('#freeResourceChooseSendBtn').on('click', function(parameters) {
                console.log('chooseMonopolyResource', parameters);
                var contract = {
                    Token: token,
                    PlayerId: userId,
                    resource: 1,
                };
                $.post("/Game/ChooseMonopolyResource", contract);
                console.log("/Game/ChooseMonopolyResource", contract);
            });
        }
    };

    var chooseFreeResouce = function(args) {
        chosenResourcs = [
            { Type: 0, Qty: 0 },
            { Type: 1, Qty: 0 },
            { Type: 2, Qty: 0 },
            { Type: 3, Qty: 0 },
            { Type: 4, Qty: 0 }
        ];
        neededResourceCount = 2;
        neededResourceQty = 1;
        if (currentUser.PlayerName == userMove) {
            $('#freeResourceChoose').modal('show');
            $('#resourceCheckLabe').html('Выберете 2 ресурса, которые получите бесплатно в результате розыгрыша карты "изобилие"');
            $('#freeResourceChooseSendBtn').hide();
            $('#freeResourceChooseSendBtn').on('click', function (parameters) {
                console.log('chooseFreeResouce', parameters);
                var contract = {
                    Token: token,
                    playerId: userId,
                    first: 1,
                    second: 2
                };
                $.post("/Game/ChooseFreeResource", contract);
                console.log("/Game/ChooseFreeResource", contract);
            });
        }
    };

    var updateChosenResource = function (resource) {
        console.log('updateChosenResource', chosenResourcs);
        var selector = '#chooseResource' + resource;
        var card = $(selector);
        var selectedValueCount = 0;
        if (card.hasClass('unchooseResourceTemplate')) {
            card.addClass('chooseResourceTemplate');
            card.removeClass('unchooseResourceTemplate');
            chosenResourcs[resource].Qty = 1;
        } else {
            card.addClass('unchooseResourceTemplate');
            card.removeClass('chooseResourceTemplate');
            chosenResourcs[resource].Qty = 0;
        }

        for (var i = 0; i < chosenResourcs.length; i++) {
            if (chosenResourcs[i].Qty == neededResourceQty) {
                selectedValueCount++;
            }
        }

        if (selectedValueCount == neededResourceCount) {
            $('#freeResourceChooseSendBtn').show();
        } else {
            $('#freeResourceChooseSendBtn').hide();
        }
        console.log('updateChosenResource', chosenResourcs);
    };
</script>

<div style="width: 100%">
    <div style="position:relative;width:65%;height:700px; float: left">
        <div id="canvas" style="position:relative;width:100%;height:700px;">
        </div>
    </div>
    <div style="position: relative; width: 35%; float: right">
        <div id="preGameState">
            @foreach (var game in Model)
            {
            <div class="btn btn-success" onclick="resumeGame('@game.Id')">
                Возобновить игру @game.Id
            </div>
            }
            <h1 id="userQueue">Начать искать игру</h1>
            <div id="creatingGame">
                <input type="text" id="displayname" value="@User.Identity.Name" />
                <button id="search">Найти игру</button>
            </div>
            <p id="tokenGame"></p>
            <table class="table" style="width: 200px; height: 100px;">
                <tbody>
                    <tr id="UserName"></tr>
                    <tr id="UserColor"></tr>
                </tbody>
            </table>
        </div>
        <div id="passMove" class="btn btn-danger">
            Пропустить ход
        </div>
        <div id="gameState">
        </div>
        <div id="gameMarket">
        </div>
        <div id="deckPartial">
        </div>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="throwDiceModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Бросок кубика</h4>
            </div>
            <div class="modal-body" style="height:400px">
                <h1 id="throwDiceResult"></h1>
                <div id="coubes">
                    <div style="width:50%;float:left">
                        <section id="cubecontainer0" class="cubecontainer">
                            <div id="cube" class="show-front panels-backface-invisible">
                                <figure class="front">1</figure>
                                <figure class="back">2</figure>
                                <figure class="right">3</figure>
                                <figure class="left">4</figure>
                                <figure class="top">5</figure>
                                <figure class="bottom">6</figure>
                            </div>
                        </section>
                    </div>
                    <div style="width:50%;float:right">
                        <section id="cubecontainer1" class="cubecontainer">
                            <div id="cube" class="show-front panels-backface-invisible">
                                <figure class="front">1</figure>
                                <figure class="back">2</figure>
                                <figure class="right">3</figure>
                                <figure class="left">4</figure>
                                <figure class="top">5</figure>
                                <figure class="bottom">6</figure>
                            </div>
                        </section>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="throwDiceCloseBtn">Закрыть</button>

                <button type="button" class="btn btn-primary" id="throwDiceBtn">Бросить кубик</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- Modal -->
<div class="modal fade" id="freeResourceChoose" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Выбор ресурсов</h4>
            </div>
            <div class="modal-body" style="height:400px">
                <h1 id="resourceCheckLabe"></h1>
                <div id="chooseResource0" class="unchooseResourceTemplate" onclick="updateChosenResource(0)">
                    <img src="~/Sprites/rs0.png" alt="..." class="img-thumbnail" style="width:90px;height:135px;">
                </div>
                <div id="chooseResource1" class="unchooseResourceTemplate" onclick="updateChosenResource(1)">
                    <img src="~/Sprites/rs1.png" alt="..." class="img-thumbnail" style="width: 90px; height: 135px; ">
                </div>
                <div id="chooseResource2" class="unchooseResourceTemplate" onclick="updateChosenResource(2)">
                    <img src="~/Sprites/rs2.png" alt="..." class="img-thumbnail" style="width: 90px; height: 135px; ">
                </div>
                <div id="chooseResource3" class="unchooseResourceTemplate" onclick="updateChosenResource(3)">
                    <img src="~/Sprites/rs3.png" alt="..." class="img-thumbnail" style="width: 90px; height: 135px; ">
                </div>
                <div id="chooseResource4" class="unchooseResourceTemplate" onclick="updateChosenResource(4)">
                    <img src="~/Sprites/rs4.png" alt="..." class="img-thumbnail" style="width: 90px; height: 135px; ">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" id="freeResourceChooseSendBtn">Выбрать</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->